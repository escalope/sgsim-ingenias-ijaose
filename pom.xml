<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<parent>
		<groupId>net.sf.ingenias</groupId>
		<artifactId>iaftesting</artifactId>
		<version>1.7-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sf.sgsimulator</groupId>
	<artifactId>sgsim-ingenias</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>A template project for INGENIAS agents using the sgsimulator</name>
	<url>http://maven.apache.org</url>
	<packaging>jar</packaging>
	<description>
A template project for INGENIAS agents using the sgsimulator
</description>
	<repositories>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>Sonatype repository</id>
			<name>Sonatype's Maven repository</name>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>net.sf.sgsimulator</groupId>
			<artifactId>remote</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<!--dependency> <groupId>mired.ucm</groupId> <artifactId>emaf</artifactId> 
			<version>1.0.0-SNAPSHOT</version> </dependency -->

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8</version>
			<scope>test</scope>
		</dependency>



		<dependency>
			<groupId>org.apache.maven.surefire</groupId>
			<artifactId>surefire-testng</artifactId>
			<version>2.14</version>

		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.maven.surefire</groupId>
			<artifactId>surefire-testng</artifactId>
			<version>2.14</version>

		</dependency>

	</dependencies>


	<build>
		<resources>
			<resource>
				<directory>target/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
		<defaultGoal>package</defaultGoal>
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.16</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<siteDirectory>${project.basedir}/target/dochtml</siteDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>build-classpath</id>
						<phase>validate</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<outputFile>target/classpath.txt</outputFile>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
					<execution>
						<id>build-classpath-editor</id>
						<phase>validate</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<includeGroupIds>net.sf.ingenias</includeGroupIds>
							<outputFile>target/classpathingenias.txt</outputFile>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin><!-- shade plugin must go before izpack to be executed first -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.7.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-${project.version}-selfcontained</finalName>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>ingenias.jade.MainProdStandAlone</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- begin: izpack configuration -->
			<!-- copy other checked resource into staging area, expected by install.xml -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>create-staging-area</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy todir="${staging.dir}">
									<fileset dir="${basedir}/src/izpack" />
								</copy>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>changegridlabdpermission</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<chmod dir="target/resources/gridlab3.0/bin" perm="755"
									includes="**/*" />
								<chmod dir="target/resources/gridlab3.0/lib" perm="755"
									includes="**/*" />
								<chmod dir="target/resources/gridlabd32" perm="755"
									includes="**/*" />
							</target>
						</configuration>
						
					</execution>
				</executions>
			</plugin>


			<!-- prepare dependencies so that izpack jar tag to pickup at compile 
				time -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<stripVersion>true</stripVersion>
							<excludeGroupIds>org.codehaus.izpack</excludeGroupIds> <!-- dont want standalone compiler -->
							<outputDirectory>${staging.dir}/dependency</outputDirectory>
						</configuration>
					</execution>
<execution>
						<id>unpack-licenses</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>net.sf.sgsimulator</groupId>
									<artifactId>rtsim</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<includes>gridlab3.0/**/*,gridlabd32/**/*,xml/**/*</includes>
									<outputDirectory>target/resources</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- see install.xml to see how MyHelloPanel is used -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>1.0-alpha-5</version>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-standalone-compiler</artifactId>
						<version>${izpack-standalone.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<izpackBasedir>${staging.dir}</izpackBasedir>
					<customPanelDirectory>${staging.dir}</customPanelDirectory>
				</configuration>
				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<installerFile>${project.build.directory}/${project.artifactId}-${project.version}-installer</installerFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end: izpack configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<!-- by default associated with generate-sources phase -->
						<id>generate sources for IAF</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<keepAlive>false</keepAlive>
							<mainClass>ingenias.codeproc.IAFGenerator</mainClass>
							<arguments>
								<argument>${project.basedir}/src/main/spec/specification.xml</argument>
								<argument>${project.basedir}</argument>
								<argument>src/main/javagensrc</argument>
								<argument>src/main/javapermsrc</argument>
								<argument>${forceiafgen}</argument>
								<!-- to force code generation and test this way the IAF -->
							</arguments>
						</configuration>
					</execution>
					<execution>
						<!-- It generates the documentation associated wiht the metamodel -->
						<id>generate document for metamodel</id>
						<phase>pre-site</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<keepAlive>false</keepAlive>
							<mainClass>ingenias.codeproc.HTMLDocumentGenerator</mainClass>
							<arguments>
								<argument>${project.basedir}/src/main/spec/specification.xml</argument>
								<argument>${project.basedir}</argument>
							</arguments>
						</configuration>
					</execution>
					
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-main-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/javagensrc</source>
								<source>src/main/javapermsrc</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/java</source>
								<source>src/test/javapermsrc</source>
								<source>src/test/javagensrc</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14</version>
				<configuration>
					<includes>
						<include>**/*Test*.java</include>
					</includes>
					<properties>
						<property>
							<name>listener</name>
							<value>org.fest.swing.testng.listener.ScreenshotOnFailureListener</value>
						</property>
					</properties>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>copy-dependencies</goal>

											<goal>build-classpath</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								
							<pluginExecution>
									<pluginExecutionFilter>
										<groupId>oorg.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-pluginn</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								
								
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<properties>
		<!-- begin: izpack configuration -->
		<staging.dir>${project.build.directory}/staging</staging.dir>
		<izpack-standalone.version>4.3.5</izpack-standalone.version>
		<!-- end: izpack configuration -->
	</properties>
</project>
